
 package autopartsclient.module.Exploit;
 

import autopartsclient.module.Mod;
import autopartsclient.util.WorldUtils;
import net.minecraft.entity.Entity;
import net.minecraft.entity.passive.LlamaEntity;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;

public class Ride extends Mod {
    public static boolean isToggled;
    
    public Ride() {
	super("Ride", "", Category.EXPLOIT);
    }
    
    @Override
    public void onEnable() {
        // TODO Auto-generated method stub
	isToggled = true;
        super.onEnable();
    }
    
    @Override
    public void onDisable() {
	isToggled = false;
        // TODO Auto-generated method stub
        super.onDisable();
    }
/*
    @Override
    public void onTick() {
	if (mc.player.getVehicle() == null)
	    return;

	Entity e = mc.player.getVehicle();
	double speed = 2.0;

	double forward = mc.player.forwardSpeed;
	double strafe = mc.player.sidewaysSpeed;
	float yaw = mc.player.getYaw();

	e.setYaw(yaw);
	if (e instanceof LlamaEntity) {
	    ((LlamaEntity) e).headYaw = mc.player.headYaw;
	}

	if (forward == 0 && strafe == 0) {
	    e.setVelocity(new Vec3d(0, e.getVelocity().y, 0));

	    if (forward != 0.0D) {
		if (strafe > 0.0D) {
		    yaw += (forward > 0.0D ? -45 : 45);
		} else if (strafe < 0.0D) {
		    yaw += (forward > 0.0D ? 45 : -45);
		}

		if (forward > 0.0D) {
		    forward = 1.0D;
		} else if (forward < 0.0D) {
		    forward = -1.0D;
		}

		strafe = 0.0D;
	    }

	    e.setVelocity(
		    forward * speed * Math.cos(Math.toRadians(yaw + 90.0F))
			    + strafe * speed * Math.sin(Math.toRadians(yaw + 90.0F)),
		    e.getVelocity().y, forward * speed * Math.sin(Math.toRadians(yaw + 90.0F))
			    - strafe * speed * Math.cos(Math.toRadians(yaw + 90.0F)));

	    if (mc.options.jumpKey.isPressed()) {
		e.setVelocity(e.getVelocity().x, 1, e.getVelocity().z);
	    } else {
		e.setVelocity(e.getVelocity().x, 1, e.getVelocity().z);
	    }

	    BlockPos p = new BlockPos(e.getPos());
	    if (!mc.world.getBlockState(p.down()).getMaterial().isReplaceable() && e.fallDistance > 0.01) {
		e.setVelocity(e.getVelocity().x, -1, e.getVelocity().z);
	    }

	    Vec3d vel = e.getVelocity().multiply(2);
	    if (WorldUtils.doesBoxCollide(e.getBoundingBox().offset(vel.x, 0, vel.z))) {
		for (int i = 2; i < 10; i++) {
		    if (!WorldUtils.doesBoxCollide(e.getBoundingBox().offset(vel.x / i, 0, vel.z / i))) {
			e.setVelocity(vel.x / i / 2, vel.y, vel.z / i / 2);
			break;
		    }
		}
	    }

	}
    }
    */
}
